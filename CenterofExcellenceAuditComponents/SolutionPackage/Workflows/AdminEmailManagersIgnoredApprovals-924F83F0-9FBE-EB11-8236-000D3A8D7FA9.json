{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_CoEGovDataverse"
        },
        "runtimeSource": "embedded"
      },
      "shared_office365": {
        "api": {
          "name": "shared_office365"
        },
        "connection": {
          "connectionReferenceLogicalName": "new_CoEGovO365Outlook"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Apply_to_each_M1_Manager": {
          "actions": {
            "Apply_to_each_Employee": {
              "actions": {
                "Apply_to_each_App": {
                  "actions": {
                    "Append_to_array_variable_-_appList": {
                      "inputs": {
                        "name": "appList",
                        "value": {
                          "App Name": "@items('Apply_to_each_App')?['admin_displayname']",
                          "Employee": "@items('Apply_to_each_Employee')?['admin_displayname']",
                          "Environment": "@items('Apply_to_each_App')?['admin_appenvironmentdisplayname']",
                          "Ignored Since": "@formatDateTime(items('Apply_to_each_App')?['admin_apparchiverequestignoredsince'], 'D')"
                        }
                      },
                      "runAfter": {},
                      "type": "AppendToArrayVariable"
                    }
                  },
                  "foreach": "@outputs('Get_Old_Apps')?['body/value']",
                  "runAfter": {
                    "Get_Old_Apps": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Apply_to_each_Flow": {
                  "actions": {
                    "Append_to_array_variable_-_flowList": {
                      "inputs": {
                        "name": "flowList",
                        "value": {
                          "Employee": "@items('Apply_to_each_Employee')?['admin_displayname']",
                          "Environment": "@items('Apply_to_each_Flow')?['admin_flowenvironmentdisplayname']",
                          "Flow Name": "@items('Apply_to_each_Flow')?['admin_displayname']",
                          "Ignored Since": "@formatDateTime(items('Apply_to_each_Flow')?['admin_flowarchiverequestignoredsince'], 'D')"
                        }
                      },
                      "runAfter": {},
                      "type": "AppendToArrayVariable"
                    }
                  },
                  "foreach": "@outputs('Get_Old_Flows')?['body/value']",
                  "runAfter": {
                    "Get_Old_Flows": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Get_Old_Apps": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "ListRecords"
                    },
                    "parameters": {
                      "$filter": "admin_apparchiverequestignoredsince lt @{body('Get_past_time')} and _admin_appowner_value eq @{items('Apply_to_each_Employee')?['admin_makerid']}",
                      "$select": "admin_apparchiverequestignoredsince, admin_appenvironmentdisplayname, admin_displayname",
                      "entityName": "admin_apps"
                    }
                  },
                  "runAfter": {},
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "type": "OpenApiConnection"
                },
                "Get_Old_Flows": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "ListRecords"
                    },
                    "parameters": {
                      "$filter": "admin_flowarchiverequestignoredsince lt @{body('Get_past_time')} and _admin_derivedowner_value eq @{items('Apply_to_each_Employee')?['admin_makerid']}",
                      "$select": "admin_flowarchiverequestignoredsince, admin_flowenvironmentdisplayname, admin_displayname",
                      "entityName": "admin_flows"
                    }
                  },
                  "runAfter": {
                    "Apply_to_each_App": [
                      "Succeeded"
                    ]
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "type": "OpenApiConnection"
                }
              },
              "foreach": "@outputs('Get_Employees')?['body/value']",
              "runAfter": {
                "Get_Employees": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Clear_appList": {
              "inputs": {
                "name": "appList",
                "value": "@variables('emptyList')"
              },
              "runAfter": {
                "Send_mail_if_either_array_non-empty": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Clear_flowList": {
              "inputs": {
                "name": "flowList",
                "value": "@variables('emptyList')"
              },
              "runAfter": {
                "Clear_appList": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Get_Employees": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "admin_managerprinciplename eq '@{items('Apply_to_each_M1_Manager')['Manager']}'",
                  "$select": "admin_displayname, admin_makerid",
                  "entityName": "admin_makers"
                }
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                }
              },
              "type": "OpenApiConnection"
            },
            "Send_mail_if_either_array_non-empty": {
              "actions": {
                "Create_HTML_table_of_Apps": {
                  "inputs": {
                    "format": "HTML",
                    "from": "@variables('appList')"
                  },
                  "runAfter": {},
                  "type": "Table"
                },
                "Create_HTML_table_of_Flows": {
                  "inputs": {
                    "format": "HTML",
                    "from": "@variables('flowList')"
                  },
                  "runAfter": {
                    "Create_HTML_table_of_Apps": [
                      "Succeeded"
                    ]
                  },
                  "type": "Table"
                },
                "Send_an_email_(V2)": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                      "connectionName": "shared_office365",
                      "operationId": "SendEmailV2"
                    },
                    "parameters": {
                      "emailMessage/Body": "<p>@{variables('htmlHeader')}<br>\n<br>\nIn an attempt to keep our tenant clean, we ask people to confirm that objects that appear no longer useful can be removed from the tenant. <br> \nYou have employees who have not responded to inquies. <br> \n@{if(equals(variables('CleanUpAppURL'), ''), 'Please ask them to go and approve or reject these requests:', concat('Please browse to <a href=', variables('CleanUpAppURL'), '&amp;SelectUsers=1', '> Cleanup Old Objects App </a> and remind them to respond'))}\n<br>\n</p>\n\n<b>APPS</b><br>\n@{body('Create_HTML_table_of_Apps')}<br><br>\n<b>FLOWS</b><br>\n@{body('Create_HTML_table_of_Flows')}",
                      "emailMessage/Subject": "Your employees have stale Power Platform objects",
                      "emailMessage/To": "@if(equals(parameters('ProductionEnvironment'), true),  items('Apply_to_each_M1_Manager')['Manager'], parameters('Admin eMail'))"
                    }
                  },
                  "runAfter": {
                    "Create_HTML_table_of_Flows": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                }
              },
              "expression": {
                "or": [
                  {
                    "greater": [
                      "@length(variables('appList'))",
                      0
                    ]
                  },
                  {
                    "greater": [
                      "@length(variables('flowList'))",
                      0
                    ]
                  }
                ]
              },
              "runAfter": {
                "Apply_to_each_Employee": [
                  "Succeeded"
                ]
              },
              "type": "If"
            }
          },
          "foreach": "@variables('DistinctM1List')",
          "runAfter": {
            "Create_DistinctM1List": [
              "Succeeded"
            ]
          },
          "type": "Foreach"
        },
        "Create_DistinctM1List": {
          "inputs": {
            "variables": [
              {
                "name": "DistinctM1List",
                "type": "array",
                "value": "@union(body('Select_Alias'), body('Select_Alias'))"
              }
            ]
          },
          "runAfter": {
            "Select_Alias": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Get_Manager_Principle_Names": {
          "inputs": {
            "authentication": "@parameters('$authentication')",
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "connectionName": "shared_commondataserviceforapps_1",
              "operationId": "ListRecords"
            },
            "parameters": {
              "$filter": "admin_managerprinciplename ne null",
              "$select": "admin_managerprinciplename",
              "entityName": "admin_makers"
            }
          },
          "runAfter": {
            "Set_env_var_CleanUpAppURL": [
              "Succeeded"
            ]
          },
          "runtimeConfiguration": {
            "paginationPolicy": {
              "minimumItemCount": 100000
            }
          },
          "type": "OpenApiConnection"
        },
        "Get_past_time": {
          "inputs": {
            "interval": 1,
            "timeUnit": "Month"
          },
          "kind": "GetPastTime",
          "runAfter": {},
          "type": "Expression"
        },
        "Initialize_appList": {
          "inputs": {
            "variables": [
              {
                "name": "appList",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Get_past_time": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_emptyList": {
          "inputs": {
            "variables": [
              {
                "name": "emptyList",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_flowList": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_flowList": {
          "inputs": {
            "variables": [
              {
                "name": "flowList",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_appList": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_htmlHeader": {
          "inputs": {
            "variables": [
              {
                "name": "htmlHeader",
                "type": "string",
                "value": "@parameters('eMail Header Style')"
              }
            ]
          },
          "runAfter": {
            "Initialize_emptyList": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_var_CleanUpAppURL": {
          "inputs": {
            "variables": [
              {
                "name": "CleanUpAppURL",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_htmlHeader": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Select_Alias": {
          "inputs": {
            "from": "@outputs('Get_Manager_Principle_Names')?['body/value']",
            "select": {
              "manager": "@item()?['admin_managerprinciplename']"
            }
          },
          "runAfter": {
            "Get_Manager_Principle_Names": [
              "Succeeded"
            ]
          },
          "type": "Select"
        },
        "Set_env_var_CleanUpAppURL": {
          "actions": {
            "Get_ID_from_CleanUpAppURL": {
              "inputs": "@first(body('ListDefns-CleanUpAppURL')?['value'])?['environmentvariabledefinitionid']",
              "runAfter": {
                "ListDefns-CleanUpAppURL": [
                  "Succeeded"
                ]
              },
              "type": "Compose"
            },
            "ListCurrents-CleanUpAppURL": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "_environmentvariabledefinitionid_value eq @{outputs('Get_ID_from_CleanUpAppURL')}",
                  "$select": "value",
                  "entityName": "environmentvariablevalues"
                }
              },
              "runAfter": {
                "Get_ID_from_CleanUpAppURL": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                }
              },
              "type": "OpenApiConnection"
            },
            "ListDefns-CleanUpAppURL": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "schemaname eq 'admin_CleanupOldObjectsAppURL'",
                  "$select": "environmentvariabledefinitionid, defaultvalue",
                  "entityName": "environmentvariabledefinitions"
                }
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                }
              },
              "type": "OpenApiConnection"
            },
            "Set_to_current_or_default_-_CleanUpAppURL": {
              "actions": {
                "Set_CleanUpAppURL_-_CurrentValue": {
                  "inputs": {
                    "name": "CleanUpAppURL",
                    "value": "@{first(body('ListCurrents-CleanUpAppURL')?['value'])?['Value']}"
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                }
              },
              "else": {
                "actions": {
                  "Set_CleanUpAppURL_-_DefaultValue": {
                    "inputs": {
                      "name": "CleanUpAppURL",
                      "value": "@{first(body('ListDefns-CleanUpAppURL')?['value'])?['defaultvalue']}"
                    },
                    "runAfter": {},
                    "type": "SetVariable"
                  }
                }
              },
              "expression": {
                "greaterOrEquals": [
                  "@length(body('ListCurrents-CleanUpAppURL')?['value'])\r\n",
                  1
                ]
              },
              "runAfter": {
                "ListCurrents-CleanUpAppURL": [
                  "Succeeded"
                ]
              },
              "type": "If"
            }
          },
          "description": "must use old technique for fetching as env var is optional",
          "runAfter": {
            "Initialize_var_CleanUpAppURL": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "Admin eMail": {
          "defaultValue": "CoETeam@PPlatform.onmicrosoft.com",
          "metadata": {
            "description": "CoE Admin eMail. Email address used in flows to send notifications to admins; this should be either your email address or a distribution list",
            "schemaName": "admin_AdminMail"
          },
          "type": "String"
        },
        "ProductionEnvironment": {
          "defaultValue": true,
          "metadata": {
            "description": "true by default. set to false if you are creating a dev type envt. this will allow some flows to set target users to the admin instead of object owners",
            "schemaName": "admin_ProductionEnvironment"
          },
          "type": "Bool"
        },
        "eMail Header Style": {
          "defaultValue": "<head> <style>  body {     background-color: #efefef;     font-family: Segoe UI;     text-align: left; }  #content {     border: 1px solid #742774;     background-color: #ffffff;     width: 650px;     margin-bottom: 50px;     display: inline-block; }  #logo {     margin-left: 52px;     margin-top: 40px;     width: 60px;     height: 12px; }  #header {     font-size: 24px;     margin-left: 50px;     margin-top: 20px;     margin-bottom: 20px; }  #ribbon {     background-color: #742774; }  #ribbonContent {     font-size: 20px;     padding-left: 30px;     padding-top: 10px;     padding-bottom: 20px;     color: white;     width: 100%;     padding-right: 10px; }  #message > td {     font-size: 14px;     padding-left: 60px;     padding-right: 60px;     padding-top: 20px;     padding-bottom: 40px; }  #footer > td {     font-size: 12px;     background-color: #cfcfcf;     height: 40px;     padding-top: 15px;     padding-left: 40px;     padding-bottom: 20px; }  #form {     width: 100%;     border-collapse: collapse; }  #app {     width: 60%;     font-size: 12px; }  .label {     color: #5f5f5f }  table {     border-collapse: collapse;     width: 100%; }  th, td {     padding: 8px;     text-align: left;     border-bottom: 1px solid #ddd; }  </style> </head>",
          "metadata": {
            "description": "CSS/Style used for eMails",
            "schemaName": "admin_eMailHeaderStyle"
          },
          "type": "String"
        }
      },
      "triggers": {
        "Recurrence": {
          "recurrence": {
            "frequency": "Week",
            "interval": 1
          },
          "type": "Recurrence"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
